{
  "info": {
    "name": "Task Manager API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": { "major": 1, "minor": 0, "patch": 1 }
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "task_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Create Task",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "url": { "raw": "{{base_url}}/tasks", "host": ["{{base_url}}"], "path": ["tasks"] },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Write unit tests\",\n  \"description\": \"Cover all endpoints\",\n  \"priority\": \"medium\",\n  \"due_date\": \"2025-08-01T12:00:00Z\"\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Status is 201 Created",
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "// Response has an ID",
              "var jsonData = pm.response.json();",
              "pm.test(\"Response has id property\", function () {",
              "    pm.expect(jsonData).to.have.property('id');",
              "});",
              "",
              "// Save id for subsequent requests",
              "pm.environment.set(\"task_id\", jsonData.id);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get All Tasks",
      "request": {
        "method": "GET",
        "header": [],
        "url": { "raw": "{{base_url}}/tasks", "host": ["{{base_url}}"], "path": ["tasks"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Status is 200 OK",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// Response is an array",
              "var jsonData = pm.response.json();",
              "pm.test(\"Response is an array\", function () {",
              "    pm.expect(Array.isArray(jsonData)).to.be.true;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Task by ID",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/tasks/{{task_id}}",
          "host": ["{{base_url}}"],
          "path": ["tasks", "{{task_id}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Status is 200 OK",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// Returned id matches",
              "var jsonData = pm.response.json();",
              "pm.test(\"ID matches environment variable\", function () {",
              "    pm.expect(jsonData.id).to.eql(pm.environment.get(\"task_id\"));",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update Task",
      "request": {
        "method": "PUT",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "url": {
          "raw": "{{base_url}}/tasks/{{task_id}}",
          "host": ["{{base_url}}"],
          "path": ["tasks", "{{task_id}}"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Write more tests\",\n  \"status\": \"inprogress\",\n  \"priority\": \"high\"\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Status is 200 OK",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// Response reflects updated fields",
              "var jsonData = pm.response.json();",
              "pm.test(\"Name updated\", function () {",
              "    pm.expect(jsonData.name).to.eql(\"Write more tests\");",
              "});",
              "pm.test(\"Status updated to inprogress\", function () {",
              "    pm.expect(jsonData.status).to.eql(\"inprogress\");",
              "});",
              "pm.test(\"Priority updated to high\", function () {",
              "    pm.expect(jsonData.priority).to.eql(\"high\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Delete Task",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{base_url}}/tasks/{{task_id}}",
          "host": ["{{base_url}}"],
          "path": ["tasks", "{{task_id}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Status is 204 No Content",
              "pm.test(\"Status code is 204\", function () {",
              "    pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
